{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Luchino0/Calculadora/blob/main/Para_Profesor_Luis_copia_github_link_verdadero\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Nombre:"
      ],
      "metadata": {
        "id": "9Lc9Z9MqQDb2"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Video:"
      ],
      "metadata": {
        "id": "LducT8UeRNl9"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Cargar Dataset"
      ],
      "metadata": {
        "id": "7o-sHFYJQGs7"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "CjrraWoaP8mR",
        "outputId": "ff435b86-2be4-4b13-9f7d-a08cde60e513",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 704
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           date        prod_id         prod_brand      category  \\\n",
              "0      20190609  7702155021451             BINNER  Supermercado   \n",
              "1      20190609  7702155016457             BINNER  Supermercado   \n",
              "2      20190609  4008455446318        DR.BECKMANN  Supermercado   \n",
              "3      20190609  7702532312677            BONAIRE  Supermercado   \n",
              "4      20190609  7702532312967            BONAIRE  Supermercado   \n",
              "...         ...            ...                ...           ...   \n",
              "25635  20200220    80432402795  SOMETHING SPECIAL  Supermercado   \n",
              "25636  20200220  5010327505213       THE BALVENIE  Supermercado   \n",
              "25637  20200220  5000299295021      THE GLENLIVET  Supermercado   \n",
              "25638  20200220  7702450522011   HIGHLAND SUPREME  Supermercado   \n",
              "25639  20200220  5010314048907           MACALLAN  Supermercado   \n",
              "\n",
              "           subcategory           tags prod_unit_price prod_units  prod_cant  \\\n",
              "0        Aseo de hogar      Alfombras          15,590   Unidades       17.0   \n",
              "1        Aseo de hogar      Alfombras          13,993   Unidades       76.0   \n",
              "2        Aseo de hogar      Alfombras          16,513   Unidades       28.0   \n",
              "3        Aseo de hogar  Ambientadores          14,990   Unidades       78.0   \n",
              "4        Aseo de hogar  Ambientadores          34,990   Unidades       97.0   \n",
              "...                ...            ...             ...        ...        ...   \n",
              "25635  Vinos y Licores         Whisky          49,990    Botella       93.0   \n",
              "25636  Vinos y Licores         Whisky         209,990    Botella        2.0   \n",
              "25637  Vinos y Licores         Whisky         165,990    Botella       78.0   \n",
              "25638  Vinos y Licores         Whisky          55,990    Botella       92.0   \n",
              "25639  Vinos y Licores         Whisky         183,990    Botella        4.0   \n",
              "\n",
              "                                       prod_icon prod_source  source_type  \n",
              "0              ../icons/SVG/53-places/home-3.svg       VERDE            1  \n",
              "1              ../icons/SVG/53-places/home-3.svg       VERDE            1  \n",
              "2              ../icons/SVG/53-places/home-3.svg       VERDE            1  \n",
              "3      ../icons/SVG/58-beauty-spas/spa-vapor.svg       VERDE            1  \n",
              "4      ../icons/SVG/58-beauty-spas/spa-vapor.svg       VERDE            1  \n",
              "...                                          ...         ...          ...  \n",
              "25635          ../icons/SVG/73-drink/whiskey.svg       VERDE            1  \n",
              "25636          ../icons/SVG/73-drink/whiskey.svg       VERDE            1  \n",
              "25637          ../icons/SVG/73-drink/whiskey.svg       VERDE            1  \n",
              "25638          ../icons/SVG/73-drink/whiskey.svg       VERDE            1  \n",
              "25639          ../icons/SVG/73-drink/whiskey.svg       VERDE            1  \n",
              "\n",
              "[25640 rows x 12 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-44cc7af1-6a33-46cc-a6b6-cc02100dffd8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>prod_id</th>\n",
              "      <th>prod_brand</th>\n",
              "      <th>category</th>\n",
              "      <th>subcategory</th>\n",
              "      <th>tags</th>\n",
              "      <th>prod_unit_price</th>\n",
              "      <th>prod_units</th>\n",
              "      <th>prod_cant</th>\n",
              "      <th>prod_icon</th>\n",
              "      <th>prod_source</th>\n",
              "      <th>source_type</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>20190609</td>\n",
              "      <td>7702155021451</td>\n",
              "      <td>BINNER</td>\n",
              "      <td>Supermercado</td>\n",
              "      <td>Aseo de hogar</td>\n",
              "      <td>Alfombras</td>\n",
              "      <td>15,590</td>\n",
              "      <td>Unidades</td>\n",
              "      <td>17.0</td>\n",
              "      <td>../icons/SVG/53-places/home-3.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>20190609</td>\n",
              "      <td>7702155016457</td>\n",
              "      <td>BINNER</td>\n",
              "      <td>Supermercado</td>\n",
              "      <td>Aseo de hogar</td>\n",
              "      <td>Alfombras</td>\n",
              "      <td>13,993</td>\n",
              "      <td>Unidades</td>\n",
              "      <td>76.0</td>\n",
              "      <td>../icons/SVG/53-places/home-3.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>20190609</td>\n",
              "      <td>4008455446318</td>\n",
              "      <td>DR.BECKMANN</td>\n",
              "      <td>Supermercado</td>\n",
              "      <td>Aseo de hogar</td>\n",
              "      <td>Alfombras</td>\n",
              "      <td>16,513</td>\n",
              "      <td>Unidades</td>\n",
              "      <td>28.0</td>\n",
              "      <td>../icons/SVG/53-places/home-3.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>20190609</td>\n",
              "      <td>7702532312677</td>\n",
              "      <td>BONAIRE</td>\n",
              "      <td>Supermercado</td>\n",
              "      <td>Aseo de hogar</td>\n",
              "      <td>Ambientadores</td>\n",
              "      <td>14,990</td>\n",
              "      <td>Unidades</td>\n",
              "      <td>78.0</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/spa-vapor.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>20190609</td>\n",
              "      <td>7702532312967</td>\n",
              "      <td>BONAIRE</td>\n",
              "      <td>Supermercado</td>\n",
              "      <td>Aseo de hogar</td>\n",
              "      <td>Ambientadores</td>\n",
              "      <td>34,990</td>\n",
              "      <td>Unidades</td>\n",
              "      <td>97.0</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/spa-vapor.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25635</th>\n",
              "      <td>20200220</td>\n",
              "      <td>80432402795</td>\n",
              "      <td>SOMETHING SPECIAL</td>\n",
              "      <td>Supermercado</td>\n",
              "      <td>Vinos y Licores</td>\n",
              "      <td>Whisky</td>\n",
              "      <td>49,990</td>\n",
              "      <td>Botella</td>\n",
              "      <td>93.0</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25636</th>\n",
              "      <td>20200220</td>\n",
              "      <td>5010327505213</td>\n",
              "      <td>THE BALVENIE</td>\n",
              "      <td>Supermercado</td>\n",
              "      <td>Vinos y Licores</td>\n",
              "      <td>Whisky</td>\n",
              "      <td>209,990</td>\n",
              "      <td>Botella</td>\n",
              "      <td>2.0</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25637</th>\n",
              "      <td>20200220</td>\n",
              "      <td>5000299295021</td>\n",
              "      <td>THE GLENLIVET</td>\n",
              "      <td>Supermercado</td>\n",
              "      <td>Vinos y Licores</td>\n",
              "      <td>Whisky</td>\n",
              "      <td>165,990</td>\n",
              "      <td>Botella</td>\n",
              "      <td>78.0</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25638</th>\n",
              "      <td>20200220</td>\n",
              "      <td>7702450522011</td>\n",
              "      <td>HIGHLAND SUPREME</td>\n",
              "      <td>Supermercado</td>\n",
              "      <td>Vinos y Licores</td>\n",
              "      <td>Whisky</td>\n",
              "      <td>55,990</td>\n",
              "      <td>Botella</td>\n",
              "      <td>92.0</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25639</th>\n",
              "      <td>20200220</td>\n",
              "      <td>5010314048907</td>\n",
              "      <td>MACALLAN</td>\n",
              "      <td>Supermercado</td>\n",
              "      <td>Vinos y Licores</td>\n",
              "      <td>Whisky</td>\n",
              "      <td>183,990</td>\n",
              "      <td>Botella</td>\n",
              "      <td>4.0</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>25640 rows × 12 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-44cc7af1-6a33-46cc-a6b6-cc02100dffd8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-44cc7af1-6a33-46cc-a6b6-cc02100dffd8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-44cc7af1-6a33-46cc-a6b6-cc02100dffd8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-24a74ed0-bd5f-4e25-b3d8-57889b7fcf03\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-24a74ed0-bd5f-4e25-b3d8-57889b7fcf03')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-24a74ed0-bd5f-4e25-b3d8-57889b7fcf03 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_a787f8b5-a1f6-4fc9-93c2-dc734f3048fd\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_a787f8b5-a1f6-4fc9-93c2-dc734f3048fd button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 219
        }
      ],
      "source": [
        "import pandas as pd\n",
        "#una ves importado pandas que nos ayudara a la realizacion de las tareas\n",
        "#debemos cargar un archivo asignado excel, transformado a csv\n",
        "#---------------------------------------------------------------------\n",
        "\n",
        "df  = pd.read_csv('/content/ejerciciofinal2.csv')\n",
        "df\n",
        "#con esta linea podremos cargar y ver los datos del dataset"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Exploración, limpieza y preparación de datos"
      ],
      "metadata": {
        "id": "s46ApKmtQeWX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#una ves ya cargado el archivo csv que fue analizado con la herramienta KNIME\n",
        "#fue utilizada para poder eliminar campos NaN que era una columna que no tenia nombre\n",
        "#pero si su dato\n",
        "\n",
        "# y ahora poder eliminar columnas que no nos sean relevante\n",
        "df = df.drop(['date','prod_units','prod_brand','category','subcategory'],axis=1)\n",
        "df"
      ],
      "metadata": {
        "id": "BqBvlUjmQ4k7",
        "outputId": "51afc279-2d93-41be-f4eb-5a941dbcc9e9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             prod_id           tags prod_unit_price  prod_cant  \\\n",
              "0      7702155021451      Alfombras          15,590       17.0   \n",
              "1      7702155016457      Alfombras          13,993       76.0   \n",
              "2      4008455446318      Alfombras          16,513       28.0   \n",
              "3      7702532312677  Ambientadores          14,990       78.0   \n",
              "4      7702532312967  Ambientadores          34,990       97.0   \n",
              "...              ...            ...             ...        ...   \n",
              "25635    80432402795         Whisky          49,990       93.0   \n",
              "25636  5010327505213         Whisky         209,990        2.0   \n",
              "25637  5000299295021         Whisky         165,990       78.0   \n",
              "25638  7702450522011         Whisky          55,990       92.0   \n",
              "25639  5010314048907         Whisky         183,990        4.0   \n",
              "\n",
              "                                       prod_icon prod_source  source_type  \n",
              "0              ../icons/SVG/53-places/home-3.svg       VERDE            1  \n",
              "1              ../icons/SVG/53-places/home-3.svg       VERDE            1  \n",
              "2              ../icons/SVG/53-places/home-3.svg       VERDE            1  \n",
              "3      ../icons/SVG/58-beauty-spas/spa-vapor.svg       VERDE            1  \n",
              "4      ../icons/SVG/58-beauty-spas/spa-vapor.svg       VERDE            1  \n",
              "...                                          ...         ...          ...  \n",
              "25635          ../icons/SVG/73-drink/whiskey.svg       VERDE            1  \n",
              "25636          ../icons/SVG/73-drink/whiskey.svg       VERDE            1  \n",
              "25637          ../icons/SVG/73-drink/whiskey.svg       VERDE            1  \n",
              "25638          ../icons/SVG/73-drink/whiskey.svg       VERDE            1  \n",
              "25639          ../icons/SVG/73-drink/whiskey.svg       VERDE            1  \n",
              "\n",
              "[25640 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-97a9cbcb-f89d-4d0d-99b7-6a1e300aa2b3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>prod_id</th>\n",
              "      <th>tags</th>\n",
              "      <th>prod_unit_price</th>\n",
              "      <th>prod_cant</th>\n",
              "      <th>prod_icon</th>\n",
              "      <th>prod_source</th>\n",
              "      <th>source_type</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7702155021451</td>\n",
              "      <td>Alfombras</td>\n",
              "      <td>15,590</td>\n",
              "      <td>17.0</td>\n",
              "      <td>../icons/SVG/53-places/home-3.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7702155016457</td>\n",
              "      <td>Alfombras</td>\n",
              "      <td>13,993</td>\n",
              "      <td>76.0</td>\n",
              "      <td>../icons/SVG/53-places/home-3.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4008455446318</td>\n",
              "      <td>Alfombras</td>\n",
              "      <td>16,513</td>\n",
              "      <td>28.0</td>\n",
              "      <td>../icons/SVG/53-places/home-3.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>7702532312677</td>\n",
              "      <td>Ambientadores</td>\n",
              "      <td>14,990</td>\n",
              "      <td>78.0</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/spa-vapor.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7702532312967</td>\n",
              "      <td>Ambientadores</td>\n",
              "      <td>34,990</td>\n",
              "      <td>97.0</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/spa-vapor.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25635</th>\n",
              "      <td>80432402795</td>\n",
              "      <td>Whisky</td>\n",
              "      <td>49,990</td>\n",
              "      <td>93.0</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25636</th>\n",
              "      <td>5010327505213</td>\n",
              "      <td>Whisky</td>\n",
              "      <td>209,990</td>\n",
              "      <td>2.0</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25637</th>\n",
              "      <td>5000299295021</td>\n",
              "      <td>Whisky</td>\n",
              "      <td>165,990</td>\n",
              "      <td>78.0</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25638</th>\n",
              "      <td>7702450522011</td>\n",
              "      <td>Whisky</td>\n",
              "      <td>55,990</td>\n",
              "      <td>92.0</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25639</th>\n",
              "      <td>5010314048907</td>\n",
              "      <td>Whisky</td>\n",
              "      <td>183,990</td>\n",
              "      <td>4.0</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>25640 rows × 7 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97a9cbcb-f89d-4d0d-99b7-6a1e300aa2b3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-97a9cbcb-f89d-4d0d-99b7-6a1e300aa2b3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-97a9cbcb-f89d-4d0d-99b7-6a1e300aa2b3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b1758644-b0c3-4b44-b462-fbd5e9b57cbf\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b1758644-b0c3-4b44-b462-fbd5e9b57cbf')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b1758644-b0c3-4b44-b462-fbd5e9b57cbf button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_713476fd-ea3d-49bd-9af6-ec0e2b7a8f50\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_713476fd-ea3d-49bd-9af6-ec0e2b7a8f50 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 220
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#intentamos hacer un dropna tambien para poder ver si puede limpiar aun mas los datos\n",
        "\n",
        "df = df.dropna()\n",
        "df\n",
        "#si vemos bien en los rows 25640 filas o oberservaciones\n",
        "#al aplicar al dropna pudimos tener aun mas limpieza de las obersvaciones\n",
        "#quedando en 25 557"
      ],
      "metadata": {
        "id": "EzMJjFBZZyIp",
        "outputId": "c454f919-f0fe-42c8-8f72-d7414d20a9ac",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             prod_id           tags prod_unit_price  prod_cant  \\\n",
              "0      7702155021451      Alfombras          15,590       17.0   \n",
              "1      7702155016457      Alfombras          13,993       76.0   \n",
              "2      4008455446318      Alfombras          16,513       28.0   \n",
              "3      7702532312677  Ambientadores          14,990       78.0   \n",
              "4      7702532312967  Ambientadores          34,990       97.0   \n",
              "...              ...            ...             ...        ...   \n",
              "25635    80432402795         Whisky          49,990       93.0   \n",
              "25636  5010327505213         Whisky         209,990        2.0   \n",
              "25637  5000299295021         Whisky         165,990       78.0   \n",
              "25638  7702450522011         Whisky          55,990       92.0   \n",
              "25639  5010314048907         Whisky         183,990        4.0   \n",
              "\n",
              "                                       prod_icon prod_source  source_type  \n",
              "0              ../icons/SVG/53-places/home-3.svg       VERDE            1  \n",
              "1              ../icons/SVG/53-places/home-3.svg       VERDE            1  \n",
              "2              ../icons/SVG/53-places/home-3.svg       VERDE            1  \n",
              "3      ../icons/SVG/58-beauty-spas/spa-vapor.svg       VERDE            1  \n",
              "4      ../icons/SVG/58-beauty-spas/spa-vapor.svg       VERDE            1  \n",
              "...                                          ...         ...          ...  \n",
              "25635          ../icons/SVG/73-drink/whiskey.svg       VERDE            1  \n",
              "25636          ../icons/SVG/73-drink/whiskey.svg       VERDE            1  \n",
              "25637          ../icons/SVG/73-drink/whiskey.svg       VERDE            1  \n",
              "25638          ../icons/SVG/73-drink/whiskey.svg       VERDE            1  \n",
              "25639          ../icons/SVG/73-drink/whiskey.svg       VERDE            1  \n",
              "\n",
              "[25227 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c3e2bbf8-6ccd-41bf-8851-e137b2cb7f1f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>prod_id</th>\n",
              "      <th>tags</th>\n",
              "      <th>prod_unit_price</th>\n",
              "      <th>prod_cant</th>\n",
              "      <th>prod_icon</th>\n",
              "      <th>prod_source</th>\n",
              "      <th>source_type</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7702155021451</td>\n",
              "      <td>Alfombras</td>\n",
              "      <td>15,590</td>\n",
              "      <td>17.0</td>\n",
              "      <td>../icons/SVG/53-places/home-3.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7702155016457</td>\n",
              "      <td>Alfombras</td>\n",
              "      <td>13,993</td>\n",
              "      <td>76.0</td>\n",
              "      <td>../icons/SVG/53-places/home-3.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4008455446318</td>\n",
              "      <td>Alfombras</td>\n",
              "      <td>16,513</td>\n",
              "      <td>28.0</td>\n",
              "      <td>../icons/SVG/53-places/home-3.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>7702532312677</td>\n",
              "      <td>Ambientadores</td>\n",
              "      <td>14,990</td>\n",
              "      <td>78.0</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/spa-vapor.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7702532312967</td>\n",
              "      <td>Ambientadores</td>\n",
              "      <td>34,990</td>\n",
              "      <td>97.0</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/spa-vapor.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25635</th>\n",
              "      <td>80432402795</td>\n",
              "      <td>Whisky</td>\n",
              "      <td>49,990</td>\n",
              "      <td>93.0</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25636</th>\n",
              "      <td>5010327505213</td>\n",
              "      <td>Whisky</td>\n",
              "      <td>209,990</td>\n",
              "      <td>2.0</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25637</th>\n",
              "      <td>5000299295021</td>\n",
              "      <td>Whisky</td>\n",
              "      <td>165,990</td>\n",
              "      <td>78.0</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25638</th>\n",
              "      <td>7702450522011</td>\n",
              "      <td>Whisky</td>\n",
              "      <td>55,990</td>\n",
              "      <td>92.0</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25639</th>\n",
              "      <td>5010314048907</td>\n",
              "      <td>Whisky</td>\n",
              "      <td>183,990</td>\n",
              "      <td>4.0</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>VERDE</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>25227 rows × 7 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c3e2bbf8-6ccd-41bf-8851-e137b2cb7f1f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c3e2bbf8-6ccd-41bf-8851-e137b2cb7f1f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c3e2bbf8-6ccd-41bf-8851-e137b2cb7f1f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-64e11696-f066-46f0-b6a8-23d4a495547f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-64e11696-f066-46f0-b6a8-23d4a495547f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-64e11696-f066-46f0-b6a8-23d4a495547f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_68990e1a-f034-4d7d-853b-2ff1ed28a78f\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_68990e1a-f034-4d7d-853b-2ff1ed28a78f button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 221
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#SI VEMOS BIEN HAY UNA COLUMNA CON EL NOMBRE DE PROD_TYPE QUE NO SE HACE RELAVANCIA\n",
        "df = df.drop(['source_type'],axis=1)\n",
        "df"
      ],
      "metadata": {
        "id": "BJwek9iEahaF",
        "outputId": "afaeb37a-dfa7-41e0-b7a9-287805707545",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             prod_id           tags prod_unit_price  prod_cant  \\\n",
              "0      7702155021451      Alfombras          15,590       17.0   \n",
              "1      7702155016457      Alfombras          13,993       76.0   \n",
              "2      4008455446318      Alfombras          16,513       28.0   \n",
              "3      7702532312677  Ambientadores          14,990       78.0   \n",
              "4      7702532312967  Ambientadores          34,990       97.0   \n",
              "...              ...            ...             ...        ...   \n",
              "25635    80432402795         Whisky          49,990       93.0   \n",
              "25636  5010327505213         Whisky         209,990        2.0   \n",
              "25637  5000299295021         Whisky         165,990       78.0   \n",
              "25638  7702450522011         Whisky          55,990       92.0   \n",
              "25639  5010314048907         Whisky         183,990        4.0   \n",
              "\n",
              "                                       prod_icon prod_source  \n",
              "0              ../icons/SVG/53-places/home-3.svg       VERDE  \n",
              "1              ../icons/SVG/53-places/home-3.svg       VERDE  \n",
              "2              ../icons/SVG/53-places/home-3.svg       VERDE  \n",
              "3      ../icons/SVG/58-beauty-spas/spa-vapor.svg       VERDE  \n",
              "4      ../icons/SVG/58-beauty-spas/spa-vapor.svg       VERDE  \n",
              "...                                          ...         ...  \n",
              "25635          ../icons/SVG/73-drink/whiskey.svg       VERDE  \n",
              "25636          ../icons/SVG/73-drink/whiskey.svg       VERDE  \n",
              "25637          ../icons/SVG/73-drink/whiskey.svg       VERDE  \n",
              "25638          ../icons/SVG/73-drink/whiskey.svg       VERDE  \n",
              "25639          ../icons/SVG/73-drink/whiskey.svg       VERDE  \n",
              "\n",
              "[25227 rows x 6 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3c2a05bb-1157-4473-ac7b-98c0d723c550\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>prod_id</th>\n",
              "      <th>tags</th>\n",
              "      <th>prod_unit_price</th>\n",
              "      <th>prod_cant</th>\n",
              "      <th>prod_icon</th>\n",
              "      <th>prod_source</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7702155021451</td>\n",
              "      <td>Alfombras</td>\n",
              "      <td>15,590</td>\n",
              "      <td>17.0</td>\n",
              "      <td>../icons/SVG/53-places/home-3.svg</td>\n",
              "      <td>VERDE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7702155016457</td>\n",
              "      <td>Alfombras</td>\n",
              "      <td>13,993</td>\n",
              "      <td>76.0</td>\n",
              "      <td>../icons/SVG/53-places/home-3.svg</td>\n",
              "      <td>VERDE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4008455446318</td>\n",
              "      <td>Alfombras</td>\n",
              "      <td>16,513</td>\n",
              "      <td>28.0</td>\n",
              "      <td>../icons/SVG/53-places/home-3.svg</td>\n",
              "      <td>VERDE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>7702532312677</td>\n",
              "      <td>Ambientadores</td>\n",
              "      <td>14,990</td>\n",
              "      <td>78.0</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/spa-vapor.svg</td>\n",
              "      <td>VERDE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7702532312967</td>\n",
              "      <td>Ambientadores</td>\n",
              "      <td>34,990</td>\n",
              "      <td>97.0</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/spa-vapor.svg</td>\n",
              "      <td>VERDE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25635</th>\n",
              "      <td>80432402795</td>\n",
              "      <td>Whisky</td>\n",
              "      <td>49,990</td>\n",
              "      <td>93.0</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>VERDE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25636</th>\n",
              "      <td>5010327505213</td>\n",
              "      <td>Whisky</td>\n",
              "      <td>209,990</td>\n",
              "      <td>2.0</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>VERDE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25637</th>\n",
              "      <td>5000299295021</td>\n",
              "      <td>Whisky</td>\n",
              "      <td>165,990</td>\n",
              "      <td>78.0</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>VERDE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25638</th>\n",
              "      <td>7702450522011</td>\n",
              "      <td>Whisky</td>\n",
              "      <td>55,990</td>\n",
              "      <td>92.0</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>VERDE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25639</th>\n",
              "      <td>5010314048907</td>\n",
              "      <td>Whisky</td>\n",
              "      <td>183,990</td>\n",
              "      <td>4.0</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>VERDE</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>25227 rows × 6 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3c2a05bb-1157-4473-ac7b-98c0d723c550')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3c2a05bb-1157-4473-ac7b-98c0d723c550 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3c2a05bb-1157-4473-ac7b-98c0d723c550');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1a671bfc-0aa3-4e1f-b9c9-27ba81bdbeec\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1a671bfc-0aa3-4e1f-b9c9-27ba81bdbeec')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1a671bfc-0aa3-4e1f-b9c9-27ba81bdbeec button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_235ef1f0-39ff-4f8d-9d3c-68046e977ec2\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_235ef1f0-39ff-4f8d-9d3c-68046e977ec2 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 222
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Inspecciona las 5 primeras filas"
      ],
      "metadata": {
        "id": "H405lr7bQ8Dj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.head(5)\n",
        "#utilizamos la linea de codigo para poder ver e impeccionar las primeras 5filas\n"
      ],
      "metadata": {
        "id": "sHm0HuvcRM4B",
        "outputId": "3edf9f52-50a2-41f9-d4bf-e4c0d2a65285",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         prod_id           tags prod_unit_price  prod_cant  \\\n",
              "0  7702155021451      Alfombras          15,590       17.0   \n",
              "1  7702155016457      Alfombras          13,993       76.0   \n",
              "2  4008455446318      Alfombras          16,513       28.0   \n",
              "3  7702532312677  Ambientadores          14,990       78.0   \n",
              "4  7702532312967  Ambientadores          34,990       97.0   \n",
              "\n",
              "                                   prod_icon prod_source  \n",
              "0          ../icons/SVG/53-places/home-3.svg       VERDE  \n",
              "1          ../icons/SVG/53-places/home-3.svg       VERDE  \n",
              "2          ../icons/SVG/53-places/home-3.svg       VERDE  \n",
              "3  ../icons/SVG/58-beauty-spas/spa-vapor.svg       VERDE  \n",
              "4  ../icons/SVG/58-beauty-spas/spa-vapor.svg       VERDE  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0f24d9e4-8585-4546-87c7-ab81f4bb60f5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>prod_id</th>\n",
              "      <th>tags</th>\n",
              "      <th>prod_unit_price</th>\n",
              "      <th>prod_cant</th>\n",
              "      <th>prod_icon</th>\n",
              "      <th>prod_source</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7702155021451</td>\n",
              "      <td>Alfombras</td>\n",
              "      <td>15,590</td>\n",
              "      <td>17.0</td>\n",
              "      <td>../icons/SVG/53-places/home-3.svg</td>\n",
              "      <td>VERDE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7702155016457</td>\n",
              "      <td>Alfombras</td>\n",
              "      <td>13,993</td>\n",
              "      <td>76.0</td>\n",
              "      <td>../icons/SVG/53-places/home-3.svg</td>\n",
              "      <td>VERDE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4008455446318</td>\n",
              "      <td>Alfombras</td>\n",
              "      <td>16,513</td>\n",
              "      <td>28.0</td>\n",
              "      <td>../icons/SVG/53-places/home-3.svg</td>\n",
              "      <td>VERDE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>7702532312677</td>\n",
              "      <td>Ambientadores</td>\n",
              "      <td>14,990</td>\n",
              "      <td>78.0</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/spa-vapor.svg</td>\n",
              "      <td>VERDE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7702532312967</td>\n",
              "      <td>Ambientadores</td>\n",
              "      <td>34,990</td>\n",
              "      <td>97.0</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/spa-vapor.svg</td>\n",
              "      <td>VERDE</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0f24d9e4-8585-4546-87c7-ab81f4bb60f5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0f24d9e4-8585-4546-87c7-ab81f4bb60f5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0f24d9e4-8585-4546-87c7-ab81f4bb60f5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5a1fbd20-7046-48c3-a313-248718ffa105\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5a1fbd20-7046-48c3-a313-248718ffa105')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5a1fbd20-7046-48c3-a313-248718ffa105 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 223
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Inspecciona los tipos de datos de cada feature"
      ],
      "metadata": {
        "id": "F4BV6hIrRQFH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()\n",
        "print(df.dtypes)\n",
        "#utilizamos esta linea de codigo para inspeccionar las feature en donde nos\n",
        "#encontramos con int, str, float"
      ],
      "metadata": {
        "id": "3Nza3Z6tRgF_",
        "outputId": "0d9b8e39-4670-4a1c-855a-60a64c7d44b5",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 25227 entries, 0 to 25639\n",
            "Data columns (total 6 columns):\n",
            " #   Column           Non-Null Count  Dtype  \n",
            "---  ------           --------------  -----  \n",
            " 0   prod_id          25227 non-null  int64  \n",
            " 1   tags             25227 non-null  object \n",
            " 2   prod_unit_price  25227 non-null  object \n",
            " 3   prod_cant        25227 non-null  float64\n",
            " 4   prod_icon        25227 non-null  object \n",
            " 5   prod_source      25227 non-null  object \n",
            "dtypes: float64(1), int64(1), object(4)\n",
            "memory usage: 1.3+ MB\n",
            "prod_id              int64\n",
            "tags                object\n",
            "prod_unit_price     object\n",
            "prod_cant          float64\n",
            "prod_icon           object\n",
            "prod_source         object\n",
            "dtype: object\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Elimina observaciones duplicadas"
      ],
      "metadata": {
        "id": "6DANv-UTR0oe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.drop_duplicates()\n",
        "print(\"observaciones: \")\n",
        "print(df)\n",
        "#en esta seccion podemos observar cada duplicacion de datos:"
      ],
      "metadata": {
        "id": "GXAnUbhUR6O3",
        "outputId": "0e30cfb8-8dbc-4ef6-8f25-3615500a36a4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "observaciones: \n",
            "             prod_id           tags prod_unit_price  prod_cant  \\\n",
            "0      7702155021451      Alfombras          15,590       17.0   \n",
            "1      7702155016457      Alfombras          13,993       76.0   \n",
            "2      4008455446318      Alfombras          16,513       28.0   \n",
            "3      7702532312677  Ambientadores          14,990       78.0   \n",
            "4      7702532312967  Ambientadores          34,990       97.0   \n",
            "...              ...            ...             ...        ...   \n",
            "25635    80432402795         Whisky          49,990       93.0   \n",
            "25636  5010327505213         Whisky         209,990        2.0   \n",
            "25637  5000299295021         Whisky         165,990       78.0   \n",
            "25638  7702450522011         Whisky          55,990       92.0   \n",
            "25639  5010314048907         Whisky         183,990        4.0   \n",
            "\n",
            "                                       prod_icon prod_source  \n",
            "0              ../icons/SVG/53-places/home-3.svg       VERDE  \n",
            "1              ../icons/SVG/53-places/home-3.svg       VERDE  \n",
            "2              ../icons/SVG/53-places/home-3.svg       VERDE  \n",
            "3      ../icons/SVG/58-beauty-spas/spa-vapor.svg       VERDE  \n",
            "4      ../icons/SVG/58-beauty-spas/spa-vapor.svg       VERDE  \n",
            "...                                          ...         ...  \n",
            "25635          ../icons/SVG/73-drink/whiskey.svg       VERDE  \n",
            "25636          ../icons/SVG/73-drink/whiskey.svg       VERDE  \n",
            "25637          ../icons/SVG/73-drink/whiskey.svg       VERDE  \n",
            "25638          ../icons/SVG/73-drink/whiskey.svg       VERDE  \n",
            "25639          ../icons/SVG/73-drink/whiskey.svg       VERDE  \n",
            "\n",
            "[25227 rows x 6 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Categorización de features"
      ],
      "metadata": {
        "id": "ix_Jw5nmR6oU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['prod_source']=[1 if x== \"VERDE\" else 0 for x in df['prod_source']]\n",
        "df['prod_source']\n",
        "#categorizacion de verde y amarillo"
      ],
      "metadata": {
        "id": "QlO9xxQjv-xS",
        "outputId": "4fb76318-d55f-4e30-c192-5eff385106d6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        1\n",
              "1        1\n",
              "2        1\n",
              "3        1\n",
              "4        1\n",
              "        ..\n",
              "25635    1\n",
              "25636    1\n",
              "25637    1\n",
              "25638    1\n",
              "25639    1\n",
              "Name: prod_source, Length: 25227, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 226
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Añadir feature total"
      ],
      "metadata": {
        "id": "fRRNyn1Wxr7U"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Incorpora una columna con el calculo de la cantidad y el precio"
      ],
      "metadata": {
        "id": "pvVXqnmky_bi"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['prod_cant']=df['prod_cant'].astype(int)\n"
      ],
      "metadata": {
        "id": "D_jrdVotzHZG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df['multiplicacion']= df['prod_unit_price'] * df['prod_cant']\n",
        "print(df)"
      ],
      "metadata": {
        "id": "qK45C9UocjGb",
        "outputId": "b6031c0a-5b43-4a58-eab1-beaf0bc4d476",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "             prod_id           tags prod_unit_price  prod_cant  \\\n",
            "0      7702155021451      Alfombras          15,590         17   \n",
            "1      7702155016457      Alfombras          13,993         76   \n",
            "2      4008455446318      Alfombras          16,513         28   \n",
            "3      7702532312677  Ambientadores          14,990         78   \n",
            "4      7702532312967  Ambientadores          34,990         97   \n",
            "...              ...            ...             ...        ...   \n",
            "25635    80432402795         Whisky          49,990         93   \n",
            "25636  5010327505213         Whisky         209,990          2   \n",
            "25637  5000299295021         Whisky         165,990         78   \n",
            "25638  7702450522011         Whisky          55,990         92   \n",
            "25639  5010314048907         Whisky         183,990          4   \n",
            "\n",
            "                                       prod_icon  prod_source  \\\n",
            "0              ../icons/SVG/53-places/home-3.svg            1   \n",
            "1              ../icons/SVG/53-places/home-3.svg            1   \n",
            "2              ../icons/SVG/53-places/home-3.svg            1   \n",
            "3      ../icons/SVG/58-beauty-spas/spa-vapor.svg            1   \n",
            "4      ../icons/SVG/58-beauty-spas/spa-vapor.svg            1   \n",
            "...                                          ...          ...   \n",
            "25635          ../icons/SVG/73-drink/whiskey.svg            1   \n",
            "25636          ../icons/SVG/73-drink/whiskey.svg            1   \n",
            "25637          ../icons/SVG/73-drink/whiskey.svg            1   \n",
            "25638          ../icons/SVG/73-drink/whiskey.svg            1   \n",
            "25639          ../icons/SVG/73-drink/whiskey.svg            1   \n",
            "\n",
            "                                          multiplicacion  \n",
            "0      15,59015,59015,59015,59015,59015,59015,59015,5...  \n",
            "1      13,99313,99313,99313,99313,99313,99313,99313,9...  \n",
            "2      16,51316,51316,51316,51316,51316,51316,51316,5...  \n",
            "3      14,99014,99014,99014,99014,99014,99014,99014,9...  \n",
            "4      34,99034,99034,99034,99034,99034,99034,99034,9...  \n",
            "...                                                  ...  \n",
            "25635  49,99049,99049,99049,99049,99049,99049,99049,9...  \n",
            "25636                                     209,990209,990  \n",
            "25637  165,990165,990165,990165,990165,990165,990165,...  \n",
            "25638  55,99055,99055,99055,99055,99055,99055,99055,9...  \n",
            "25639                       183,990183,990183,990183,990  \n",
            "\n",
            "[25227 rows x 7 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Dividir los datos"
      ],
      "metadata": {
        "id": "PQ8d9M4w0Fj9"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Asegurese de explicar como dividio los datos"
      ],
      "metadata": {
        "id": "ukbKmr020qUC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x = df.copy()\n",
        "x = x.drop(['tags'],axis=1)\n",
        "x"
      ],
      "metadata": {
        "id": "KyhU1q5B0pdT",
        "outputId": "d8039e6d-0883-4eef-d070-541497eb7724",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 510
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             prod_id prod_unit_price  prod_cant  \\\n",
              "0      7702155021451          15,590         17   \n",
              "1      7702155016457          13,993         76   \n",
              "2      4008455446318          16,513         28   \n",
              "3      7702532312677          14,990         78   \n",
              "4      7702532312967          34,990         97   \n",
              "...              ...             ...        ...   \n",
              "25635    80432402795          49,990         93   \n",
              "25636  5010327505213         209,990          2   \n",
              "25637  5000299295021         165,990         78   \n",
              "25638  7702450522011          55,990         92   \n",
              "25639  5010314048907         183,990          4   \n",
              "\n",
              "                                       prod_icon  prod_source  \\\n",
              "0              ../icons/SVG/53-places/home-3.svg            1   \n",
              "1              ../icons/SVG/53-places/home-3.svg            1   \n",
              "2              ../icons/SVG/53-places/home-3.svg            1   \n",
              "3      ../icons/SVG/58-beauty-spas/spa-vapor.svg            1   \n",
              "4      ../icons/SVG/58-beauty-spas/spa-vapor.svg            1   \n",
              "...                                          ...          ...   \n",
              "25635          ../icons/SVG/73-drink/whiskey.svg            1   \n",
              "25636          ../icons/SVG/73-drink/whiskey.svg            1   \n",
              "25637          ../icons/SVG/73-drink/whiskey.svg            1   \n",
              "25638          ../icons/SVG/73-drink/whiskey.svg            1   \n",
              "25639          ../icons/SVG/73-drink/whiskey.svg            1   \n",
              "\n",
              "                                          multiplicacion  \n",
              "0      15,59015,59015,59015,59015,59015,59015,59015,5...  \n",
              "1      13,99313,99313,99313,99313,99313,99313,99313,9...  \n",
              "2      16,51316,51316,51316,51316,51316,51316,51316,5...  \n",
              "3      14,99014,99014,99014,99014,99014,99014,99014,9...  \n",
              "4      34,99034,99034,99034,99034,99034,99034,99034,9...  \n",
              "...                                                  ...  \n",
              "25635  49,99049,99049,99049,99049,99049,99049,99049,9...  \n",
              "25636                                     209,990209,990  \n",
              "25637  165,990165,990165,990165,990165,990165,990165,...  \n",
              "25638  55,99055,99055,99055,99055,99055,99055,99055,9...  \n",
              "25639                       183,990183,990183,990183,990  \n",
              "\n",
              "[25227 rows x 6 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6798bfe8-0501-4251-9eec-0034404121cd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>prod_id</th>\n",
              "      <th>prod_unit_price</th>\n",
              "      <th>prod_cant</th>\n",
              "      <th>prod_icon</th>\n",
              "      <th>prod_source</th>\n",
              "      <th>multiplicacion</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7702155021451</td>\n",
              "      <td>15,590</td>\n",
              "      <td>17</td>\n",
              "      <td>../icons/SVG/53-places/home-3.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>15,59015,59015,59015,59015,59015,59015,59015,5...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7702155016457</td>\n",
              "      <td>13,993</td>\n",
              "      <td>76</td>\n",
              "      <td>../icons/SVG/53-places/home-3.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>13,99313,99313,99313,99313,99313,99313,99313,9...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4008455446318</td>\n",
              "      <td>16,513</td>\n",
              "      <td>28</td>\n",
              "      <td>../icons/SVG/53-places/home-3.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>16,51316,51316,51316,51316,51316,51316,51316,5...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>7702532312677</td>\n",
              "      <td>14,990</td>\n",
              "      <td>78</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/spa-vapor.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>14,99014,99014,99014,99014,99014,99014,99014,9...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7702532312967</td>\n",
              "      <td>34,990</td>\n",
              "      <td>97</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/spa-vapor.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>34,99034,99034,99034,99034,99034,99034,99034,9...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25635</th>\n",
              "      <td>80432402795</td>\n",
              "      <td>49,990</td>\n",
              "      <td>93</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>49,99049,99049,99049,99049,99049,99049,99049,9...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25636</th>\n",
              "      <td>5010327505213</td>\n",
              "      <td>209,990</td>\n",
              "      <td>2</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>209,990209,990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25637</th>\n",
              "      <td>5000299295021</td>\n",
              "      <td>165,990</td>\n",
              "      <td>78</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>165,990165,990165,990165,990165,990165,990165,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25638</th>\n",
              "      <td>7702450522011</td>\n",
              "      <td>55,990</td>\n",
              "      <td>92</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>55,99055,99055,99055,99055,99055,99055,99055,9...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25639</th>\n",
              "      <td>5010314048907</td>\n",
              "      <td>183,990</td>\n",
              "      <td>4</td>\n",
              "      <td>../icons/SVG/73-drink/whiskey.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>183,990183,990183,990183,990</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>25227 rows × 6 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6798bfe8-0501-4251-9eec-0034404121cd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6798bfe8-0501-4251-9eec-0034404121cd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6798bfe8-0501-4251-9eec-0034404121cd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-50b2aa75-6c77-4f16-a3f6-f3b40f9cbf9e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-50b2aa75-6c77-4f16-a3f6-f3b40f9cbf9e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-50b2aa75-6c77-4f16-a3f6-f3b40f9cbf9e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_7ea27144-f865-4772-88a7-87ec5ba88a21\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('x')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_7ea27144-f865-4772-88a7-87ec5ba88a21 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('x');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 229
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "x_train, x_test, y_train, y_test = train_test_split(x,df['tags'],\n",
        "                                                    test_size=0.2,random_state=42)"
      ],
      "metadata": {
        "id": "quXuhhUJdDXz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x_train"
      ],
      "metadata": {
        "id": "uvCzpQeHdg4P",
        "outputId": "34d68301-87ae-4cab-a2d4-71e5c34a6c43",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 545
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             prod_id prod_unit_price  prod_cant  \\\n",
              "10169  7702310020589           5,990         22   \n",
              "16671  7702910354220           1,390         23   \n",
              "14010  7707349631010          19,590         57   \n",
              "11641  7896359022526          59,990         98   \n",
              "4702   7502211161684           5,173         13   \n",
              "...              ...             ...        ...   \n",
              "21783  7506339390216          14,590         86   \n",
              "5396   7702914222020           2,890         43   \n",
              "866    7702045563351          11,613         69   \n",
              "15801    30900007007           9,390         95   \n",
              "23982  2500323000001           5,700         95   \n",
              "\n",
              "                                            prod_icon  prod_source  \\\n",
              "10169  ../icons/SVG/58-beauty-spas/flower-essence.svg            1   \n",
              "16671                  ../icons/SVG/74-food/wheat.svg            1   \n",
              "14010          ../icons/SVG/73-drink/beer-glass-2.svg            1   \n",
              "11641            ../icons/SVG/74-food/sugar-icing.svg            1   \n",
              "4702           ../icons/SVG/75-kitchen/frying-pan.svg            1   \n",
              "...                                               ...          ...   \n",
              "21783       ../icons/SVG/58-beauty-spas/spa-vapor.svg            1   \n",
              "5396                  ../icons/SVG/74-food/cookie.svg            1   \n",
              "866        ../icons/SVG/58-beauty-spas/spa-facial.svg            1   \n",
              "15801                 ../icons/SVG/74-food/cheese.svg            1   \n",
              "23982           ../icons/SVG/74-food/bread-french.svg            1   \n",
              "\n",
              "                                          multiplicacion  \n",
              "10169  5,9905,9905,9905,9905,9905,9905,9905,9905,9905...  \n",
              "16671  1,3901,3901,3901,3901,3901,3901,3901,3901,3901...  \n",
              "14010  19,59019,59019,59019,59019,59019,59019,59019,5...  \n",
              "11641  59,99059,99059,99059,99059,99059,99059,99059,9...  \n",
              "4702   5,1735,1735,1735,1735,1735,1735,1735,1735,1735...  \n",
              "...                                                  ...  \n",
              "21783  14,59014,59014,59014,59014,59014,59014,59014,5...  \n",
              "5396   2,8902,8902,8902,8902,8902,8902,8902,8902,8902...  \n",
              "866    11,61311,61311,61311,61311,61311,61311,61311,6...  \n",
              "15801  9,3909,3909,3909,3909,3909,3909,3909,3909,3909...  \n",
              "23982  5,7005,7005,7005,7005,7005,7005,7005,7005,7005...  \n",
              "\n",
              "[20181 rows x 6 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-aedc8bde-fb5e-41b2-8d0d-bc26a2cb6bfd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>prod_id</th>\n",
              "      <th>prod_unit_price</th>\n",
              "      <th>prod_cant</th>\n",
              "      <th>prod_icon</th>\n",
              "      <th>prod_source</th>\n",
              "      <th>multiplicacion</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>10169</th>\n",
              "      <td>7702310020589</td>\n",
              "      <td>5,990</td>\n",
              "      <td>22</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/flower-essence.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>5,9905,9905,9905,9905,9905,9905,9905,9905,9905...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16671</th>\n",
              "      <td>7702910354220</td>\n",
              "      <td>1,390</td>\n",
              "      <td>23</td>\n",
              "      <td>../icons/SVG/74-food/wheat.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>1,3901,3901,3901,3901,3901,3901,3901,3901,3901...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14010</th>\n",
              "      <td>7707349631010</td>\n",
              "      <td>19,590</td>\n",
              "      <td>57</td>\n",
              "      <td>../icons/SVG/73-drink/beer-glass-2.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>19,59019,59019,59019,59019,59019,59019,59019,5...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11641</th>\n",
              "      <td>7896359022526</td>\n",
              "      <td>59,990</td>\n",
              "      <td>98</td>\n",
              "      <td>../icons/SVG/74-food/sugar-icing.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>59,99059,99059,99059,99059,99059,99059,99059,9...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4702</th>\n",
              "      <td>7502211161684</td>\n",
              "      <td>5,173</td>\n",
              "      <td>13</td>\n",
              "      <td>../icons/SVG/75-kitchen/frying-pan.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>5,1735,1735,1735,1735,1735,1735,1735,1735,1735...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21783</th>\n",
              "      <td>7506339390216</td>\n",
              "      <td>14,590</td>\n",
              "      <td>86</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/spa-vapor.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>14,59014,59014,59014,59014,59014,59014,59014,5...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5396</th>\n",
              "      <td>7702914222020</td>\n",
              "      <td>2,890</td>\n",
              "      <td>43</td>\n",
              "      <td>../icons/SVG/74-food/cookie.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>2,8902,8902,8902,8902,8902,8902,8902,8902,8902...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>866</th>\n",
              "      <td>7702045563351</td>\n",
              "      <td>11,613</td>\n",
              "      <td>69</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/spa-facial.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>11,61311,61311,61311,61311,61311,61311,61311,6...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15801</th>\n",
              "      <td>30900007007</td>\n",
              "      <td>9,390</td>\n",
              "      <td>95</td>\n",
              "      <td>../icons/SVG/74-food/cheese.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>9,3909,3909,3909,3909,3909,3909,3909,3909,3909...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23982</th>\n",
              "      <td>2500323000001</td>\n",
              "      <td>5,700</td>\n",
              "      <td>95</td>\n",
              "      <td>../icons/SVG/74-food/bread-french.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>5,7005,7005,7005,7005,7005,7005,7005,7005,7005...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20181 rows × 6 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aedc8bde-fb5e-41b2-8d0d-bc26a2cb6bfd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-aedc8bde-fb5e-41b2-8d0d-bc26a2cb6bfd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-aedc8bde-fb5e-41b2-8d0d-bc26a2cb6bfd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c056cd26-57f4-4815-b54b-92d5b9b9c216\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c056cd26-57f4-4815-b54b-92d5b9b9c216')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c056cd26-57f4-4815-b54b-92d5b9b9c216 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_2b426c64-6eaf-4577-8873-677bfba58acf\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('x_train')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_2b426c64-6eaf-4577-8873-677bfba58acf button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('x_train');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 231
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x_test"
      ],
      "metadata": {
        "id": "OPAheBu5djLC",
        "outputId": "0e57b8af-198f-44db-ee34-032d5cf60e2b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 562
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             prod_id prod_unit_price  prod_cant  \\\n",
              "9075   7702433289740           3,090         45   \n",
              "977    7707363361375           5,173         83   \n",
              "23318  8423352204407          10,990         80   \n",
              "5067   2503329000006          26,392         49   \n",
              "969    7702215305798           5,390          4   \n",
              "...              ...             ...        ...   \n",
              "9012   7702433327145           3,090         39   \n",
              "13343  7702011277084           5,390        100   \n",
              "23824  7703812013543           9,990         64   \n",
              "9743   7501056340131          11,990         10   \n",
              "14756  7793253471705          12,990         90   \n",
              "\n",
              "                                            prod_icon  prod_source  \\\n",
              "9075      ../icons/SVG/58-beauty-spas/nail-polish.svg            1   \n",
              "977       ../icons/SVG/58-beauty-spas/nail-polish.svg            1   \n",
              "23318  ../icons/SVG/73-drink/organic-liquid-glass.svg            1   \n",
              "5067                  ../icons/SVG/74-food/cookie.svg            1   \n",
              "969       ../icons/SVG/58-beauty-spas/nail-polish.svg            1   \n",
              "...                                               ...          ...   \n",
              "9012      ../icons/SVG/58-beauty-spas/nail-polish.svg            1   \n",
              "13343                 ../icons/SVG/74-food/cookie.svg            1   \n",
              "23824      ../icons/SVG/58-beauty-spas/spa-lotion.svg            1   \n",
              "9743       ../icons/SVG/58-beauty-spas/spa-lotion.svg            1   \n",
              "14756      ../icons/SVG/58-beauty-spas/spa-lotion.svg            1   \n",
              "\n",
              "                                          multiplicacion  \n",
              "9075   3,0903,0903,0903,0903,0903,0903,0903,0903,0903...  \n",
              "977    5,1735,1735,1735,1735,1735,1735,1735,1735,1735...  \n",
              "23318  10,99010,99010,99010,99010,99010,99010,99010,9...  \n",
              "5067   26,39226,39226,39226,39226,39226,39226,39226,3...  \n",
              "969                                 5,3905,3905,3905,390  \n",
              "...                                                  ...  \n",
              "9012   3,0903,0903,0903,0903,0903,0903,0903,0903,0903...  \n",
              "13343  5,3905,3905,3905,3905,3905,3905,3905,3905,3905...  \n",
              "23824  9,9909,9909,9909,9909,9909,9909,9909,9909,9909...  \n",
              "9743   11,99011,99011,99011,99011,99011,99011,99011,9...  \n",
              "14756  12,99012,99012,99012,99012,99012,99012,99012,9...  \n",
              "\n",
              "[5046 rows x 6 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-043e5850-5909-4416-8d03-eb27efdbc60c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>prod_id</th>\n",
              "      <th>prod_unit_price</th>\n",
              "      <th>prod_cant</th>\n",
              "      <th>prod_icon</th>\n",
              "      <th>prod_source</th>\n",
              "      <th>multiplicacion</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>9075</th>\n",
              "      <td>7702433289740</td>\n",
              "      <td>3,090</td>\n",
              "      <td>45</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/nail-polish.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>3,0903,0903,0903,0903,0903,0903,0903,0903,0903...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>977</th>\n",
              "      <td>7707363361375</td>\n",
              "      <td>5,173</td>\n",
              "      <td>83</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/nail-polish.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>5,1735,1735,1735,1735,1735,1735,1735,1735,1735...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23318</th>\n",
              "      <td>8423352204407</td>\n",
              "      <td>10,990</td>\n",
              "      <td>80</td>\n",
              "      <td>../icons/SVG/73-drink/organic-liquid-glass.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>10,99010,99010,99010,99010,99010,99010,99010,9...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5067</th>\n",
              "      <td>2503329000006</td>\n",
              "      <td>26,392</td>\n",
              "      <td>49</td>\n",
              "      <td>../icons/SVG/74-food/cookie.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>26,39226,39226,39226,39226,39226,39226,39226,3...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>969</th>\n",
              "      <td>7702215305798</td>\n",
              "      <td>5,390</td>\n",
              "      <td>4</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/nail-polish.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>5,3905,3905,3905,390</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9012</th>\n",
              "      <td>7702433327145</td>\n",
              "      <td>3,090</td>\n",
              "      <td>39</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/nail-polish.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>3,0903,0903,0903,0903,0903,0903,0903,0903,0903...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13343</th>\n",
              "      <td>7702011277084</td>\n",
              "      <td>5,390</td>\n",
              "      <td>100</td>\n",
              "      <td>../icons/SVG/74-food/cookie.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>5,3905,3905,3905,3905,3905,3905,3905,3905,3905...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23824</th>\n",
              "      <td>7703812013543</td>\n",
              "      <td>9,990</td>\n",
              "      <td>64</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/spa-lotion.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>9,9909,9909,9909,9909,9909,9909,9909,9909,9909...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9743</th>\n",
              "      <td>7501056340131</td>\n",
              "      <td>11,990</td>\n",
              "      <td>10</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/spa-lotion.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>11,99011,99011,99011,99011,99011,99011,99011,9...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14756</th>\n",
              "      <td>7793253471705</td>\n",
              "      <td>12,990</td>\n",
              "      <td>90</td>\n",
              "      <td>../icons/SVG/58-beauty-spas/spa-lotion.svg</td>\n",
              "      <td>1</td>\n",
              "      <td>12,99012,99012,99012,99012,99012,99012,99012,9...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5046 rows × 6 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-043e5850-5909-4416-8d03-eb27efdbc60c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-043e5850-5909-4416-8d03-eb27efdbc60c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-043e5850-5909-4416-8d03-eb27efdbc60c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2b0463c7-9aac-4d06-8948-d89986ddf379\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2b0463c7-9aac-4d06-8948-d89986ddf379')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2b0463c7-9aac-4d06-8948-d89986ddf379 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_586bb76c-9ba7-4601-a576-ae0c990b48af\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('x_test')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_586bb76c-9ba7-4601-a576-ae0c990b48af button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('x_test');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 232
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_train"
      ],
      "metadata": {
        "id": "Kw9YbBy9dnMZ",
        "outputId": "90271cef-ad6c-499a-e4af-e00d674a9581",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10169              Jabones de tocador\n",
              "16671                  Arroz y granos\n",
              "14010                        Cervezas\n",
              "11641                      Repostería\n",
              "4702     Servilletas y papel aluminio\n",
              "                     ...             \n",
              "21783                    Desodorantes\n",
              "5396                  Galletas dulces\n",
              "866                        Coloración\n",
              "15801           Quesos especializados\n",
              "23982             Panadería Artesanal\n",
              "Name: tags, Length: 20181, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 233
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_test"
      ],
      "metadata": {
        "id": "BZxb970XdpOI",
        "outputId": "c29c5ca0-1314-4d31-b364-d6bd308d48c0",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "9075                          Maquillaje\n",
              "977                           Maquillaje\n",
              "23318                   Leches vegetales\n",
              "5067                          Pastelería\n",
              "969                           Maquillaje\n",
              "                      ...               \n",
              "9012                          Maquillaje\n",
              "13343                    Galletas dulces\n",
              "23824                          Lavalozas\n",
              "9743     Acondicionadores y tratamientos\n",
              "14756                      Blanqueadores\n",
              "Name: tags, Length: 5046, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 234
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Aplicación"
      ],
      "metadata": {
        "id": "JsFsHBX5zK2i"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Algoritmo"
      ],
      "metadata": {
        "id": "rwg9KdoizSFy"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Considere la etiqueta tag como elemento de clasificacion"
      ],
      "metadata": {
        "id": "fJYMpzhn16vg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.ensemble import RandomForestClassifier\n",
        "clf = RandomForestClassifier(random_state=0)\n",
        "clf.fit(X_train, y_train)\n",
        "y_pred = clf.predict(X_test)"
      ],
      "metadata": {
        "id": "_MMBeVpIzRgT",
        "outputId": "9bf15a9a-58ff-42be-bc29-5b460009f39f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 373
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-235-bdff4a4cb391>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensemble\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mRandomForestClassifier\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mclf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mRandomForestClassifier\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrandom_state\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mclf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0my_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mclf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y, sample_weight)\u001b[0m\n\u001b[1;32m    343\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0missparse\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    344\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"sparse multilabel-indicator for y is not supported.\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 345\u001b[0;31m         X, y = self._validate_data(\n\u001b[0m\u001b[1;32m    346\u001b[0m             \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmulti_output\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maccept_sparse\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"csc\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mDTYPE\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    347\u001b[0m         )\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/base.py\u001b[0m in \u001b[0;36m_validate_data\u001b[0;34m(self, X, y, reset, validate_separately, **check_params)\u001b[0m\n\u001b[1;32m    582\u001b[0m                 \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcheck_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput_name\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"y\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mcheck_y_params\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    583\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 584\u001b[0;31m                 \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcheck_X_y\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mcheck_params\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    585\u001b[0m             \u001b[0mout\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    586\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/utils/validation.py\u001b[0m in \u001b[0;36mcheck_X_y\u001b[0;34m(X, y, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, multi_output, ensure_min_samples, ensure_min_features, y_numeric, estimator)\u001b[0m\n\u001b[1;32m   1104\u001b[0m         )\n\u001b[1;32m   1105\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1106\u001b[0;31m     X = check_array(\n\u001b[0m\u001b[1;32m   1107\u001b[0m         \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1108\u001b[0m         \u001b[0maccept_sparse\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maccept_sparse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/utils/validation.py\u001b[0m in \u001b[0;36mcheck_array\u001b[0;34m(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, estimator, input_name)\u001b[0m\n\u001b[1;32m    877\u001b[0m                     \u001b[0marray\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mxp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    878\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 879\u001b[0;31m                     \u001b[0marray\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_asarray_with_order\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morder\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0morder\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mxp\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mxp\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    880\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mComplexWarning\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mcomplex_warning\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    881\u001b[0m                 raise ValueError(\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/utils/_array_api.py\u001b[0m in \u001b[0;36m_asarray_with_order\u001b[0;34m(array, dtype, order, copy, xp)\u001b[0m\n\u001b[1;32m    183\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mxp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__name__\u001b[0m \u001b[0;32min\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m\"numpy\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"numpy.array_api\"\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    184\u001b[0m         \u001b[0;31m# Use NumPy API to support order\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 185\u001b[0;31m         \u001b[0marray\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnumpy\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morder\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0morder\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    186\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mxp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    187\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m__array__\u001b[0;34m(self, dtype)\u001b[0m\n\u001b[1;32m   2068\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2069\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__array__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mnpt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDTypeLike\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndarray\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2070\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_values\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2071\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2072\u001b[0m     def __array_wrap__(\n",
            "\u001b[0;31mValueError\u001b[0m: could not convert string to float: '4,990'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, multilabel_confusion_matrix, ConfusionMatrixDisplay, confusion_matrix\n",
        "confusion = multilabel_confusion_matrix(y_test,y_pred)\n",
        "print(f\"acc: {accuracy_score(y_test,y_pred)}\")\n",
        "print(f\"precision: {precision_score(y_test,y_pred,average='macro')}\")\n",
        "print(f\"recall: {recall_score(y_test,y_pred,average='macro')}\")\n",
        "print(f\"f1: {f1_score(y_test,y_pred,average='micro')}\")\n",
        "confusion_display = ConfusionMatrixDisplay(confusion[0],display_labels=['lleva','No lleva']).plot(values_format='d')\n"
      ],
      "metadata": {
        "id": "WN_bc90rdxK9",
        "outputId": "ce0c187a-a20f-419f-d10d-78643909fe5f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 262
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-236-8a170cf1df7a>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmetrics\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0maccuracy_score\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mprecision_score\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrecall_score\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mf1_score\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmultilabel_confusion_matrix\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mConfusionMatrixDisplay\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconfusion_matrix\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mconfusion\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmultilabel_confusion_matrix\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_test\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"acc: {accuracy_score(y_test,y_pred)}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"precision: {precision_score(y_test,y_pred,average='macro')}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"recall: {recall_score(y_test,y_pred,average='macro')}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'y_pred' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Entrenamiento"
      ],
      "metadata": {
        "id": "2ata_35y1C1f"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "POz9hAfy1Fv5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Prueba y/o Validación"
      ],
      "metadata": {
        "id": "PBZCZ10x1HNr"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "iUC0pXDq1Kb-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Resultados"
      ],
      "metadata": {
        "id": "JPPwYzdf1Mm0"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Asegurese de mostrar metricas de rendimiento"
      ],
      "metadata": {
        "id": "212VbhpT1Pa1"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "O829GhIm1Ox8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Acciones de Mejora"
      ],
      "metadata": {
        "id": "2RFDQemP1apK"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Realice cambios en el algoritmo que permitan obtener mejoras en los resultados"
      ],
      "metadata": {
        "id": "pNKtkwQg1_Sw"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "8BXugT4k1d5O"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}